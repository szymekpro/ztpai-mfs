version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - 5173:5173
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    environment:
      - VITE_API_URL=http://backend:8000
    command: >
      sh -c "npm install && npm run dev"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - ./backend:/backend
    working_dir: /backend/backend
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASS=postgres
      - CELERY_BROKER_URL=amqp://mquser:bunnypass123@mq:5672//
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:17.1
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "db", "-U", "user" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  mq:
    image: rabbitmq:3.13.7-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=mquser
      - RABBITMQ_DEFAULT_PASS=bunnypass123
    networks:
      - app-network

  worker:
    build:
      context: .
    volumes:
      - ./backend:/backend
    working_dir: /backend/backend
    command: >
      sh -c "celery -A backend worker -l INFO"
    environment:
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASS=postgres
      - CELERY_BROKER_URL=amqp://mquser:bunnypass123@mq:5672//
    depends_on:
      - backend
      - mq
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge